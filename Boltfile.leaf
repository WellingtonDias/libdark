{
	clean =
	{
		default = [["./output/*",[".c",".o",".a",".so"],""],["./output/",["string","buffer"],""]]
	},
	cPreprocess =
	{
		default = "./output/DARK.c"
	},
	execute =
	{
		c =
		[
			"gcc -std=c11 -Wall -Wextra -Wno-address -Ofast -fPIC -o './output/DARK.o' -c './output/DARK.c'",
			"ar rc './output/libdark.a' './output/DARK.o'",
			"gcc -std=c11 -Wall -Wextra -shared -fPIC -o'./output/libdark.so' './output/DARK.o'"
		],
		example =
		[
			"gcc -std=c11 -Wall -Wextra -Ofast -fPIC -o './output/string' './example/string.c' -I './output/' -L './output/' -l:libdark.a -lpthread"#,
			# "gcc -std=c11 -Wall -Wextra -Ofast -fPIC -o './output/buffer' './example/buffer.c' -I './output/' -L './output/' -l:libdark.a -lpthread"
		]
	},
	gitCommit =
	{
		default = ""
	},
	merge =
	{
		default =
		{
			input =
			[
				"./source/header.c",
				["./source/system/",["error","unsafe","safe","mutex"],".c"],
				["./source/generic/",["helper",#"endian",#"block","blob"],".c"],
				["./source/buffer/",["header","creation","structOperations","dataOperations","properties"],".c"],
				["./source/string/",["header","creation","structOperations","dataOperations","properties"],".c"]
			],
			output = "./output/DARK.c"
		}
	},
	macro =
	{
		build-library = ["merge","cPreprocess","execute:c"],
		build-example = ["execute:example"],
		build-all = ["build-library","build-example"],
		commit = "gitCommit",
		clean = "clean"
	}
}
